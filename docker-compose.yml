services:
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: backend
    restart: always
    env_file:
      - .env
    ports:
      - ${API_PORT}:${API_PORT}
    networks:
      - eviler-network
    depends_on:
      - pgbouncer
    volumes:
      - ./:/usr/src/app

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA='/var/lib/postgresql/data/pgdata'
    networks:
      - eviler-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer
    restart: always
    env_file:
      - .env
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASS}
      - DB_HOST=postgres
      - POOL_MODE=session
      - MAX_DB_CONNECTIONS=0
      - DEFAULT_POOL_SIZE=40
      - ADMIN_USERS=postgres,${DB_USER}
      - AUTH_TYPE=scram-sha-256
    ports:
      - ${DB_PORT}:${DB_PORT}
    depends_on:
      - postgres
    networks:
      - eviler-network

networks:
  eviler-network:
    driver: bridge

volumes:
  postgres-data: {}